using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
        int foundPairs = 0;
        Hashtable socks = new Hashtable();

        //loops through each sock
        for(int i = 0; i < ar.Length; i++) {

            //checks to see if the current sock type was found already
            if (socks.ContainsKey(ar[i])){
                
                //registers that a pair was found
                foundPairs++;

                //removes the matching sock from the hashtable
                socks.Remove(ar[i]);
            } else {

                //adds the sock type to the hashtabl
                socks.Add(ar[i], i);
            }
        }

        return foundPairs;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        int[] ar = Array.ConvertAll(Console.ReadLine().Split(' '), arTemp => Convert.ToInt32(arTemp))
        ;
        int result = sockMerchant(n, ar);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}